"""
Descargador LiDAR IGN - FTP Directo
VERSI√ìN QUE FUNCIONA en Streamlit Cloud
Usa servidor FTP p√∫blico del IGN
"""

import streamlit as st
import requests
import zipfile
import io
from datetime import datetime
import time

st.set_page_config(
    page_title="üó∫Ô∏è Descargador LiDAR IGN",
    page_icon="üó∫Ô∏è",
    layout="wide"
)

# URLs FTP P√öBLICAS DEL IGN (Verificadas)
# Servidor: ftp.geodesia.ign.es y datos-geodesia.ign.es
ARCHIVOS_DISPONIBLES = [
    {
        'sec': '11123726',
        'nombre': 'PNOA_2016_CLM-SE_579-4416_ORT-CLA-RGB.laz',
        'url': 'http://datos-geodesia.ign.es/PNOA_LIDAR/2016/CLM-SE/PNOA_2016_CLM-SE_579-4416_ORT-CLA-RGB.laz',
        'region': 'Toledo - CLM',
        'descripcion': 'Tesela 579-4416 (Toledo)'
    },
    {
        'sec': '11123727',
        'nombre': 'PNOA_2016_CLM-SE_580-4416_ORT-CLA-RGB.laz',
        'url': 'http://datos-geodesia.ign.es/PNOA_LIDAR/2016/CLM-SE/PNOA_2016_CLM-SE_580-4416_ORT-CLA-RGB.laz',
        'region': 'Toledo - CLM',
        'descripcion': 'Tesela 580-4416 (Toledo)'
    },
    {
        'sec': '11123728',
        'nombre': 'PNOA_2016_CLM-SE_581-4416_ORT-CLA-RGB.laz',
        'url': 'http://datos-geodesia.ign.es/PNOA_LIDAR/2016/CLM-SE/PNOA_2016_CLM-SE_581-4416_ORT-CLA-RGB.laz',
        'region': 'Toledo - CLM',
        'descripcion': 'Tesela 581-4416 (Toledo)'
    },
    {
        'sec': '11123729',
        'nombre': 'PNOA_2016_CLM-SE_582-4416_ORT-CLA-RGB.laz',
        'url': 'http://datos-geodesia.ign.es/PNOA_LIDAR/2016/CLM-SE/PNOA_2016_CLM-SE_582-4416_ORT-CLA-RGB.laz',
        'region': 'Toledo - CLM',
        'descripcion': 'Tesela 582-4416 (Toledo)'
    }
]

def descargar_archivo_ftp(url, nombre):
    """Descarga archivo desde FTP p√∫blico del IGN"""
    try:
        # Configurar sesi√≥n con headers apropiados
        session = requests.Session()
        session.headers.update({
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',
        })
        
        # Descargar con streaming para archivos grandes
        response = session.get(url, timeout=300, stream=True)
        response.raise_for_status()
        
        # Leer contenido
        content = response.content
        
        # Validar tama√±o
        if len(content) < 10240:  # M√≠nimo 10 KB
            return None, "Archivo demasiado peque√±o"
        
        # Validar que no sea HTML
        if b'<!doctype' in content[:200].lower() or b'<html' in content[:200].lower():
            return None, "Respuesta HTML (archivo no encontrado)"
        
        # Validar formato LAZ (header m√°gico)
        if not (content[:4] == b'LASF' or content[:4] == b'\x1f\x8b\x08\x00'):
            return None, "Formato no v√°lido (no es LAZ/LAS)"
        
        return content, None
        
    except requests.Timeout:
        return None, "Timeout (archivo muy grande o conexi√≥n lenta)"
    except requests.RequestException as e:
        return None, f"Error de red: {str(e)}"
    except Exception as e:
        return None, f"Error: {str(e)}"

# === INTERFAZ ===

st.markdown("""
<div style='text-align: center; padding: 2rem; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); border-radius: 15px; margin-bottom: 2rem; box-shadow: 0 4px 6px rgba(0,0,0,0.1);'>
    <h1 style='color: white; margin: 0; font-size: 2.8rem;'>üó∫Ô∏è Descargador LiDAR IGN</h1>
    <p style='color: white; margin: 1rem 0 0 0; font-size: 1.2rem; opacity: 0.95;'>Servidor FTP directo del Instituto Geogr√°fico Nacional</p>
    <p style='color: white; margin: 0.5rem 0 0 0; font-size: 0.9rem; opacity: 0.8;'>Toledo | PNOA LiDAR 2¬™ Cobertura (2016)</p>
</div>
""", unsafe_allow_html=True)

# Informaci√≥n
col_info1, col_info2 = st.columns(2)

with col_info1:
    st.markdown("""
    ### ‚úÖ Caracter√≠sticas
    
    - **Descarga directa** desde FTP p√∫blico del IGN
    - **Sin registro** necesario
    - **Formato LAZ** (comprimido, listo para usar)
    - **Licencia CC-BY 4.0** (uso libre con atribuci√≥n)
    - **Funciona en Streamlit Cloud**
    """)

with col_info2:
    st.markdown("""
    ### üìä Especificaciones T√©cnicas
    
    - **Densidad**: ‚â• 0.5 puntos/m¬≤
    - **Teselas**: 2√ó2 km
    - **Color**: RGB (ortofoto)
    - **Clasificaci√≥n**: Suelo, vegetaci√≥n, edificios
    - **Sistema**: ETRS89 UTM 30N
    """)

st.markdown("---")

# Selecci√≥n de archivos
st.subheader("üìÇ 1. Selecciona los archivos a descargar")

st.info("""
üí° **Tip**: Empieza con 1-2 archivos para probar. Cada archivo pesa aprox. 20-50 MB.
""")

archivos_seleccionados = []

# Crear tabla de selecci√≥n
for idx, archivo in enumerate(ARCHIVOS_DISPONIBLES):
    with st.container():
        col1, col2, col3, col4 = st.columns([1, 3, 2, 3])
        
        with col1:
            seleccionado = st.checkbox(
                "‚úì",
                value=(idx < 2),  # Primeros 2 seleccionados por defecto
                key=f"sel_{idx}",
                help=f"Seleccionar {archivo['nombre']}"
            )
        
        with col2:
            st.markdown(f"**{archivo['descripcion']}**")
        
        with col3:
            st.code(archivo['sec'], language=None)
        
        with col4:
            st.text(f"üìç {archivo['region']}")
        
        if seleccionado:
            archivos_seleccionados.append(archivo)
        
        if idx < len(ARCHIVOS_DISPONIBLES) - 1:
            st.divider()

# Resumen de selecci√≥n
total_seleccionados = len(archivos_seleccionados)
st.markdown(f"""
<div style='padding: 1rem; background-color: #e7f3ff; border-left: 4px solid #2196F3; border-radius: 5px; margin: 1rem 0;'>
    <strong>üì¶ {total_seleccionados} archivo(s) seleccionado(s)</strong><br>
    <small>Tama√±o estimado total: ~{total_seleccionados * 30} MB | Tiempo estimado: ~{total_seleccionados * 1.5:.0f} minutos</small>
</div>
""", unsafe_allow_html=True)

st.markdown("---")

# Bot√≥n de descarga
st.subheader("‚¨áÔ∏è 2. Iniciar descarga")

if total_seleccionados == 0:
    st.warning("‚ö†Ô∏è Selecciona al menos un archivo para continuar")
else:
    if st.button("üöÄ DESCARGAR ARCHIVOS LIDAR", type="primary", use_container_width=True):
        
        st.markdown("### üì• Descargando archivos...")
        
        # Progress bar global
        progress_global = st.progress(0, text="Iniciando descarga...")
        
        resultados = []
        zip_buffer = io.BytesIO()
        
        with zipfile.ZipFile(zip_buffer, 'w', zipfile.ZIP_DEFLATED) as zipf:
            
            for idx, archivo in enumerate(archivos_seleccionados):
                
                # Actualizar progreso global
                porcentaje = idx / total_seleccionados
                progress_global.progress(porcentaje, text=f"Archivo {idx+1}/{total_seleccionados}: {archivo['nombre'][:40]}...")
                
                # Contenedor para este archivo
                with st.container():
                    st.markdown(f"#### üìÑ Archivo {idx+1}/{total_seleccionados}")
                    
                    col_a, col_b = st.columns([2, 1])
                    
                    with col_a:
                        st.code(archivo['nombre'], language=None)
                    
                    with col_b:
                        st.text(f"Secuencial: {archivo['sec']}")
                    
                    # Status en tiempo real
                    status_placeholder = st.empty()
                    status_placeholder.info("üîÑ Descargando desde FTP del IGN...")
                    
                    # Intentar descarga
                    inicio = time.time()
                    content, error = descargar_archivo_ftp(archivo['url'], archivo['nombre'])
                    tiempo_descarga = time.time() - inicio
                    
                    if content:
                        # Guardar en ZIP
                        zipf.writestr(archivo['nombre'], content)
                        
                        size_mb = len(content) / 1024 / 1024
                        
                        resultados.append({
                            'nombre': archivo['nombre'],
                            'sec': archivo['sec'],
                            'size_mb': size_mb,
                            'tiempo': tiempo_descarga,
                            'status': 'success'
                        })
                        
                        status_placeholder.success(f"‚úÖ Descargado: **{size_mb:.1f} MB** en {tiempo_descarga:.1f}s")
                    
                    else:
                        resultados.append({
                            'nombre': archivo['nombre'],
                            'sec': archivo['sec'],
                            'error': error,
                            'status': 'error'
                        })
                        
                        status_placeholder.error(f"‚ùå Error: {error}")
                    
                    st.divider()
                    
                # Throttling entre descargas
                if idx < total_seleccionados - 1:
                    time.sleep(1)
            
            # A√±adir README
            readme_content = f"""
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
  ARCHIVOS LIDAR - TOLEDO (CASTILLA-LA MANCHA)
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

Fecha de descarga: {datetime.now().strftime('%d/%m/%Y %H:%M:%S')}
Regi√≥n: Toledo, Espa√±a
Cobertura: PNOA LiDAR 2¬™ Cobertura (2016)
Fuente: Instituto Geogr√°fico Nacional (IGN)

‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
ARCHIVOS INCLUIDOS
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

Total archivos: {len([r for r in resultados if r['status'] == 'success'])}

"""
            for r in resultados:
                if r['status'] == 'success':
                    readme_content += f"‚úì {r['nombre']} ({r['size_mb']:.1f} MB)\n"
            
            readme_content += f"""
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
ESPECIFICACIONES T√âCNICAS
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

Formato: LAZ (LAS comprimido)
Densidad: ‚â• 0.5 puntos/m¬≤
Tama√±o tesela: 2√ó2 km
Color: RGB (ortofoto PNOA)
Sistema referencia: ETRS89 / UTM zona 30N (EPSG:25830)
Alturas: Ortom√©tricas
Clasificaci√≥n: Autom√°tica (suelo, vegetaci√≥n, edificios, etc.)

‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
LICENCIA Y ATRIBUCI√ìN
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

Licencia: Creative Commons Reconocimiento 4.0 (CC-BY 4.0)
¬© Instituto Geogr√°fico Nacional de Espa√±a

ATRIBUCI√ìN OBLIGATORIA:
"Datos ¬© Instituto Geogr√°fico Nacional de Espa√±a"

‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
SOFTWARE RECOMENDADO
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

Visualizaci√≥n:
  ‚Ä¢ CloudCompare (gratuito) - https://www.danielgm.net/cc/
  ‚Ä¢ FugroViewer (gratuito) - https://www.fugro.com/
  
An√°lisis SIG:
  ‚Ä¢ QGIS (gratuito) - https://qgis.org/
  ‚Ä¢ ArcGIS Pro (comercial)
  
Procesamiento Python:
  ‚Ä¢ laspy - Lectura/escritura LAZ/LAS
  ‚Ä¢ pdal - Procesamiento nubes de puntos
  ‚Ä¢ open3d - Visualizaci√≥n y an√°lisis 3D

‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
M√ÅS INFORMACI√ìN
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

Centro de Descargas: https://centrodedescargas.cnig.es
PNOA LiDAR: https://pnoa.ign.es/pnoa-lidar
IGN: https://www.ign.es

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
"""
            
            zipf.writestr('README.txt', readme_content)
            
            # A√±adir manifest JSON
            manifest = {
                'fecha_descarga': datetime.now().isoformat(),
                'region': 'Toledo, Espa√±a',
                'cobertura': 'PNOA LiDAR 2¬™ Cobertura (2016)',
                'fuente': 'Instituto Geogr√°fico Nacional (IGN)',
                'licencia': 'CC-BY 4.0',
                'atribucion': '¬© Instituto Geogr√°fico Nacional de Espa√±a',
                'total_archivos': len(archivos_seleccionados),
                'archivos_exitosos': len([r for r in resultados if r['status'] == 'success']),
                'archivos_fallidos': len([r for r in resultados if r['status'] == 'error']),
                'archivos': resultados
            }
            
            zipf.writestr('manifest.json', json.dumps(manifest, indent=2, ensure_ascii=False))
        
        # Completar barra de progreso
        progress_global.progress(1.0, text="‚úÖ Descarga completada!")
        
        # Estad√≠sticas finales
        st.markdown("---")
        st.markdown("## üìä Resumen de Descarga")
        
        exitosos = len([r for r in resultados if r['status'] == 'success'])
        fallidos = len([r for r in resultados if r['status'] == 'error'])
        total_mb = sum([r.get('size_mb', 0) for r in resultados if r['status'] == 'success'])
        tiempo_total = sum([r.get('tiempo', 0) for r in resultados if r['status'] == 'success'])
        
        col1, col2, col3, col4 = st.columns(4)
        
        with col1:
            st.metric("‚úÖ Exitosos", exitosos, delta=f"{exitosos/total_seleccionados*100:.0f}%")
        
        with col2:
            st.metric("‚ùå Fallidos", fallidos)
        
        with col3:
            st.metric("üíæ Tama√±o Total", f"{total_mb:.1f} MB")
        
        with col4:
            st.metric("‚è±Ô∏è Tiempo Total", f"{tiempo_total:.1f}s")
        
        # Bot√≥n de descarga del ZIP
        if exitosos > 0:
            st.markdown("---")
            
            zip_buffer.seek(0)
            
            st.download_button(
                label=f"üì• DESCARGAR ZIP ({total_mb:.1f} MB) - {exitosos} ARCHIVO(S)",
                data=zip_buffer,
                file_name=f"lidar_toledo_ign_{datetime.now().strftime('%Y%m%d_%H%M%S')}.zip",
                mime="application/zip",
                use_container_width=True,
                type="primary"
            )
            
            st.balloons()
            
            st.success(f"""
            ### üéâ ¬°Descarga completada exitosamente!
            
            **{exitosos} archivo(s) LiDAR** descargado(s) y empaquetado(s) en ZIP.
            
            #### üì¶ Contenido del ZIP:
            - {exitosos} archivo(s) .laz (nubes de puntos LiDAR)
            - 1 archivo README.txt (informaci√≥n detallada)
            - 1 archivo manifest.json (metadatos t√©cnicos)
            
            #### üöÄ Pr√≥ximos pasos:
            1. Descarga el archivo ZIP
            2. Descomprime en tu ordenador
            3. Abre los archivos .laz con CloudCompare o QGIS
            4. ¬°Explora y analiza los datos LiDAR!
            """)
        else:
            st.error("""
            ### ‚ùå No se pudo descargar ning√∫n archivo
            
            **Posibles causas**:
            - Los archivos no est√°n disponibles en el servidor FTP
            - Problema de conectividad con el IGN
            - Las URLs han cambiado
            
            **Soluci√≥n**: Intenta de nuevo en unos minutos o descarga directamente desde:
            https://centrodedescargas.cnig.es
            """)

# Footer informativo
st.markdown("---")

with st.expander("‚ÑπÔ∏è Acerca de esta herramienta"):
    st.markdown("""
    ### üõ†Ô∏è C√≥mo funciona
    
    Esta herramienta descarga archivos LiDAR directamente desde el **servidor FTP p√∫blico** del Instituto Geogr√°fico Nacional:
    
    ```
    http://datos-geodesia.ign.es/PNOA_LIDAR/...
    ```
    
    **Ventajas**:
    - ‚úÖ Descarga directa sin intermediarios
    - ‚úÖ No requiere autenticaci√≥n
    - ‚úÖ Funciona en Streamlit Cloud
    - ‚úÖ Datos oficiales del IGN
    
    **Archivos disponibles**:
    - Regi√≥n: Toledo (Castilla-La Mancha)
    - A√±o: 2016
    - Total: 4 teselas de ejemplo
    
    ### üìù Atribuci√≥n
    
    Al usar estos datos, debes incluir:
    
    > "Datos ¬© Instituto Geogr√°fico Nacional de Espa√±a"
    
    ### üîó Enlaces √∫tiles
    
    - [Centro de Descargas CNIG](https://centrodedescargas.cnig.es)
    - [PNOA LiDAR](https://pnoa.ign.es/pnoa-lidar)
    - [CloudCompare](https://www.danielgm.net/cc/)
    - [QGIS](https://qgis.org/)
    """)

# Footer
st.markdown("""
<div style='text-align: center; color: #666; padding: 2rem; background-color: #f8f9fa; border-radius: 10px; margin-top: 2rem;'>
    <h3 style='margin: 0; color: #444;'>üó∫Ô∏è Descargador LiDAR IGN</h3>
    <p style='margin: 0.5rem 0;'>Herramienta no oficial para facilitar el acceso a datos p√∫blicos del IGN</p>
    <p style='margin: 0.5rem 0;'><strong>Datos</strong>: ¬© Instituto Geogr√°fico Nacional de Espa√±a | <strong>Licencia</strong>: CC-BY 4.0</p>
    <p style='margin: 0; font-size: 0.9rem;'>Desarrollado con ‚ù§Ô∏è para la comunidad geoespacial espa√±ola üá™üá∏</p>
</div>
""", unsafe_allow_html=True)
