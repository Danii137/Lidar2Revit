"""
Descargador LiDAR IGN - FTP Directo
VERSI√ìN QUE FUNCIONA en Streamlit Cloud
Usa servidor FTP p√∫blico del IGN
"""

import streamlit as st
import requests
import zipfile
import io
from datetime import datetime
import time

st.set_page_config(
    page_title="üó∫Ô∏è Descargador LiDAR IGN",
    page_icon="üó∫Ô∏è",
    layout="wide"
)

# URLs FTP P√öBLICAS DEL IGN (Verificadas)
# Servidor: ftp.geodesia.ign.es y datos-geodesia.ign.es
ARCHIVOS_DISPONIBLES = [
    {
        'sec': '11123726',
        'nombre': 'PNOA_2016_CLM-SE_579-4416_ORT-CLA-RGB.laz',
        'url': 'http://datos-geodesia.ign.es/PNOA_LIDAR/2016/CLM-SE/PNOA_2016_CLM-SE_579-4416_ORT-CLA-RGB.laz',
        'region': 'Toledo - CLM',
        'descripcion': 'Tesela 579-4416 (Toledo)'
    },
    {
        'sec': '11123727',
        'nombre': 'PNOA_2016_CLM-SE_580-4416_ORT-CLA-RGB.laz',
        'url': 'http://datos-geodesia.ign.es/PNOA_LIDAR/2016/CLM-SE/PNOA_2016_CLM-SE_580-4416_ORT-CLA-RGB.laz',
        'region': 'Toledo - CLM',
        'descripcion': 'Tesela 580-4416 (Toledo)'
    },
    {
        'sec': '11123728',
        'nombre': 'PNOA_2016_CLM-SE_581-4416_ORT-CLA-RGB.laz',
        'url': 'http://datos-geodesia.ign.es/PNOA_LIDAR/2016/CLM-SE/PNOA_2016_CLM-SE_581-4416_ORT-CLA-RGB.laz',
        'region': 'Toledo - CLM',
        'descripcion': 'Tesela 581-4416 (Toledo)'
    },
    {
        'sec': '11123729',
        'nombre': 'PNOA_2016_CLM-SE_582-4416_ORT-CLA-RGB.laz',
        'url': 'http://datos-geodesia.ign.es/PNOA_LIDAR/2016/CLM-SE/PNOA_2016_CLM-SE_582-4416_ORT-CLA-RGB.laz',
        'region': 'Toledo - CLM',
        'descripcion': 'Tesela 582-4416 (Toledo)'
    }
]

def descargar_archivo_ftp(url, nombre):
    """Descarga archivo desde FTP p√∫blico del IGN"""
    try:
        # Configurar sesi√≥n con headers apropiados
        session = requests.Session()
        session.headers.update({
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',
        })
        
        # Descargar con streaming para archivos grandes
        response = session.get(url, timeout=300, stream=True)
        response.raise_for_status()
        
        # Leer contenido
        content = response.content
        
        # Validar tama√±o
        if len(content) < 10240:  # M√≠nimo 10 KB
            return None, "Archivo demasiado peque√±o"
        
        # Validar que no sea HTML
        if b'<!doctype' in content[:200].lower() or b'<html' in content[:200].lower():
            return None, "Respuesta HTML (archivo no encontrado)"
        
        # Validar formato LAZ (header m√°gico)
        if not (content[:4] == b'LASF' or content[:4] == b'\x1f\x8b\x08\x00'):
            return None, "Formato no v√°lido (no es LAZ/LAS)"
        
        return content, None
        
    except requests.Timeout:
        return None, "Timeout (archivo muy grande o conexi√≥n lenta)"
    except requests.RequestException as e:
        return None, f"Error de red: {str(e)}"
    except Exception as e:
        return None, f"Error: {str(e)}"

# === INTERFAZ ===

st.markdown("""
<div style='text-align: center; padding: 2rem; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); border-radius: 15px; margin-bottom: 2rem; box-shadow: 0 4px 6px rgba(0,0,0,0.1);'>
    <h1 style='color: white; margin: 0; font-size: 2.8rem;'>üó∫Ô∏è Descargador LiDAR IGN</h1>
    <p style='color: white; margin: 1rem 0 0 0; font-size: 1.2rem; opacity: 0.95;'>Servidor FTP directo del Instituto Geogr√°fico Nacional</p>
    <p style='color: white; margin: 0.5rem 0 0 0; font-size: 0.9rem; opacity: 0.8;'>Toledo | PNOA LiDAR 2¬™ Cobertura (2016)</p>
</div>
""", unsafe_allow_html=True)

# Informaci√≥n
col_info1, col_info2 = st.columns(2)

with col_info1:
    st.markdown("""
    ### ‚úÖ Caracter√≠sticas
    
    - **Descarga directa** desde FTP p√∫blico del IGN
    - **Sin registro** necesario
    - **Formato LAZ** (comprimido, listo para usar)
    - **Licencia CC-BY 4.0** (uso libre con atribuci√≥n)
    - **Funciona en Streamlit Cloud**
    """)

with col_info2:
    st.markdown("""
    ### üìä Especificaciones T√©cnicas
    
    - **Densidad**: ‚â• 0.5 puntos/m¬≤
    - **Teselas**: 2√ó2 km
    - **Color**: RGB (ortofoto)
    - **Clasificaci√≥n**: Suelo, vegetaci√≥n, edificios
    - **Sistema**: ETRS89 UTM 30N
    """)

st.markdown("---")

# Selecci√≥n de archivos
st.subheader("üìÇ 1. Selecciona los archivos a descargar")

st.info("""
üí° **Tip**: Empieza con 1-2 archivos para probar. Cada archivo pesa aprox. 20-50 MB.
""")

archivos_seleccionados = []

# Crear tabla de selecci√≥n
for idx, archivo in enumerate(ARCHIVOS_DISPONIBLES):
    with st.container():
        col1, col2, col3, col4 = st.columns([1, 3, 2, 3])
        
        with col1:
            seleccionado = st.checkbox(
                "‚úì",
                value=(idx < 2),  # Primeros 2 seleccionados por defecto
                key=f"sel_{idx}",
                help=f"Seleccionar {archivo['nombre']}"
            )
        
        with col2:
            st.markdown(f"
